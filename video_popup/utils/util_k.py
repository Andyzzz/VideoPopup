""" prepare kitti camera matrix and transformation matrix """

"""
Kitti Dataset:

intrinsic matrix(00-02, 03, 04-12):

K1 = np.array([[718.856, 0,  607.1928],
             [0,  718.856,  185.2157],
             [0,        0,        1]])
K2 = np.array([[721.5377, 0,  609.5593],
             [0,  721.5377,  172.854],
             [0,        0,        1]])
K3 = np.array([[707.0912, 0,  601.8873],
              [0,  707.0912, 183.1104],
              [0,        0,       1]])

transformation matrix to gt(00-02, 03, 04-12):

Tr1 = np.array([[4.276802385584e-04, -9.999672484946e-01, -8.084491683471e-03, -1.198459927713e-02],
               [-7.210626507497e-03, 8.081198471645e-03, -9.999413164504e-01, -5.403984729748e-02],
               [9.999738645903e-01,  4.859485810390e-04, -7.206933692422e-03, -2.921968648686e-01]])
Tr2 = np.array([[2.347736981471e-04, -9.999441545438e-01, -1.056347781105e-02, -2.796816941295e-03],
               [1.044940741659e-02,  1.056535364138e-02, -9.998895741176e-01, -7.510879138296e-02],
               [9.999453885620e-01,  1.243653783865e-04,  1.045130299567e-02, -2.721327964059e-01]])
Tr3 = np.array([[-0.001857739385241, -0.999965951351000, -0.008039975204516, -0.004784029760483],
               [-0.006481465826011, 0.008051860151134, -0.999946608177400, -0.073374294642310],
               [0.999977309828700, -0.001805528627661, -0.006496203536139, -0.333996806443300]])

"""

import numpy as np
import sintel_io as sio

def get_K_and_Tr_Kitti(sequence_num):

    K1 = np.array([[718.856, 0, 607.1928],
                   [0, 718.856, 185.2157],
                   [0, 0, 1]])
    K2 = np.array([[721.5377, 0, 609.5593],
                   [0, 721.5377, 172.854],
                   [0, 0, 1]])
    K3 = np.array([[707.0912, 0, 601.8873],
                   [0, 707.0912, 183.1104],
                   [0, 0, 1]])

    Tr1 = np.array([[4.276802385584e-04, -9.999672484946e-01, -8.084491683471e-03, -1.198459927713e-02],
                    [-7.210626507497e-03, 8.081198471645e-03, -9.999413164504e-01, -5.403984729748e-02],
                    [9.999738645903e-01, 4.859485810390e-04, -7.206933692422e-03, -2.921968648686e-01]])
    Tr2 = np.array([[2.347736981471e-04, -9.999441545438e-01, -1.056347781105e-02, -2.796816941295e-03],
                    [1.044940741659e-02, 1.056535364138e-02, -9.998895741176e-01, -7.510879138296e-02],
                    [9.999453885620e-01, 1.243653783865e-04, 1.045130299567e-02, -2.721327964059e-01]])
    Tr3 = np.array([[-0.001857739385241, -0.999965951351000, -0.008039975204516, -0.004784029760483],
                    [-0.006481465826011, 0.008051860151134, -0.999946608177400, -0.073374294642310],
                    [0.999977309828700, -0.001805528627661, -0.006496203536139, -0.333996806443300]])

    if(sequence_num < 3):

        K  = K1
        Tr = Tr1

    elif(sequence_num < 4):

        K = K2
        Tr = Tr2

    else:

        K = K3
        Tr = Tr3

    return K, Tr

def get_K_Sintel(cam_folder, seq_folder, frame):

    I,E = sio.cam_read(cam_folder + seq_folder + '/frame_{:04d}.cam'.format( frame + 1 ))

    return I